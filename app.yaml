kind: Service
apiVersion: v1
metadata:
  name: golang-service
spec:
  ports:
    - name: http1
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: golang
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster

---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: golang
  generation: 1
  labels:
    app: golang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang
  template:
    metadata:
      labels:
        app: golang
    spec:
      containers:
        - name: golang
          image: r.cfcr.io/eearleyotus/edotus/dockergolanghelloworld:master
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 40
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: codefresh-generated-r.cfcr.io-cfcr-{{KUBERNETES_NAMESPACE}}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
